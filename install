#!/bin/bash

set -e
set -u

usage () {
    echo -e \
         "install [-n]"\
         "\n    -n dry run"\
         >&2
    exit 1
}

if [[ ! -f $0 ]]; then
    echo "call on real install file!"
    exit 2
fi

dry_run=""

while getopts "n" opt; do
    case "$opt" in
        n) dry_run=1
           ;;
        *) usage
           ;;
    esac
done

install="$(dirname "$0")"

pushd "$install" > /dev/null

dotdir="$(basename "$(pwd -L)")"

install_links () {
    local dot_path=${1}
    local install_path=${2}
    local install_base_path=${3}
    local dot_file=
    find "$dot_path" -mindepth 1 -maxdepth 1 -printf %f\\0 | while IFS= read -r -d '' dot_file; do
        local dot_full_path="$dot_path/$dot_file"
        case "$dot_file" in
            .git) ;;
            .gitignore) ;;
            .gitmodules) ;;
            LICENSE) ;;
            README.md) ;;
            install) ;;
            test) ;;
            *~) ;;
            *.NO_INSTALL)
                # create directories
                local install_file=${dot_file%.NO_INSTALL}
                local install_full_path="$install_path/$install_file"
                if [[ ! -e $install_full_path ]]; then
                    echo "mkdir     $install_full_path"
                    [[ -n $dry_run ]] || mkdir "$install_full_path"
                fi
                if [[ ! (-d $install_full_path || (-n $dry_run && ! -e $install_full_path)) || -L $install_full_path ]]; then
                    echo "error     $install_full_path not a directory"
                else
                    install_links "$dot_full_path" "$install_full_path" "$install_base_path"
                fi
                ;;
            *)
                # create links
                local install_file=$dot_file
                local install_full_path="$install_path/$install_file"
                local symlink_target="$(realpath -m -s --relative-to="$install_path" "$dot_full_path")"
                if [[ -L $install_full_path && $(readlink "$install_full_path") == $symlink_target ]]; then
                    echo "          $install_full_path"
                elif [[ -L $install_full_path && ! -e $install_full_path ]]; then # link without target
                    echo "overwrite $install_full_path -> $symlink_target"
                    [[ -n $dry_run ]] || ln -sf "$symlink_target" "$install_full_path"
                elif [[ -e $install_full_path ]]; then
                    if ignore=$(diff "$install_full_path" "$dot_full_path"); then
                        [[ -n $dry_run ]] || rm "$install_full_path"
                        [[ -n $dry_run ]] || ln -s "$symlink_target" "$install_full_path"
                        echo "replaced  $install_full_path"
                    else
                        echo "skipped   $install_full_path"
                    fi
                else
                    [[ -n $dry_run ]] || ln -s "$symlink_target" "$install_full_path"
                    echo "installed $install_full_path -> $symlink_target"
                fi
                ;;
        esac
    done
}

install_links . .. ..

popd > /dev/null
